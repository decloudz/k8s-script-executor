name: Release Helm Chart

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Get Docker image tag
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "image_tag=1.0.0" >> $GITHUB_OUTPUT
          else
            echo "image_tag=${{ github.event.workflow_run.outputs.image_tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Update Chart Version
        run: |
          # Extract version from the first tag (assuming it's the semantic version)
          VERSION=$(echo "${{ steps.get_tag.outputs.image_tag }}" | tr -d '[]' | cut -d',' -f1 | tr -d '"')
          # If VERSION is empty, set a default version
          if [ -z "$VERSION" ]; then
            VERSION="1.0.0"
          fi
          
          # Ensure Chart.yaml exists with proper content
          cat > deploy/chart/Chart.yaml << EOF
apiVersion: v2
name: k8s-script-executor
description: A Helm chart for Kubernetes Script Executor
type: application
version: ${VERSION#v}
appVersion: ${VERSION#v}
maintainers:
  - name: "Ade Adegboye"
    email: "alveocloudevops@gmail.com"
keywords:
  - kubernetes
  - script-executor
  - automation
home: "https://github.com/alvdevcl/k8s-script-executor"
sources:
  - "https://github.com/alvdevcl/k8s-script-executor"
EOF

      - name: Verify Chart Directory
        run: |
          ls -la deploy/chart/
          cat deploy/chart/Chart.yaml

      - name: Package Helm Chart
        run: |
          cd deploy/chart
          helm package .
          mkdir -p /tmp/helm-packages
          mv *.tgz /tmp/helm-packages/

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_PACKAGE_PATH: /tmp/helm-packages
          CR_SKIP_EXISTING: "false"
        with:
          skip_packaging: true
 